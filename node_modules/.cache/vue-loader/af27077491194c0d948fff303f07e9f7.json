{"remainingRequest":"C:\\Users\\linus\\Documents\\Diplomarbeit\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\linus\\Documents\\Diplomarbeit\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\linus\\Documents\\Diplomarbeit\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\linus\\Documents\\Diplomarbeit\\web\\src\\components\\new\\School.vue?vue&type=template&id=728b8f73&","dependencies":[{"path":"C:\\Users\\linus\\Documents\\Diplomarbeit\\web\\src\\components\\new\\School.vue","mtime":1609780156490},{"path":"C:\\Users\\linus\\Documents\\Diplomarbeit\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1609420103064},{"path":"C:\\Users\\linus\\Documents\\Diplomarbeit\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1609420128567},{"path":"C:\\Users\\linus\\Documents\\Diplomarbeit\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1609420103064},{"path":"C:\\Users\\linus\\Documents\\Diplomarbeit\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1609420128563}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}